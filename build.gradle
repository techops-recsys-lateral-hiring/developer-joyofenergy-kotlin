import org.jetbrains.kotlin.gradle.dsl.JvmTarget

plugins {
    id ("application")
    id ("org.jetbrains.kotlin.jvm").version("1.8.22")
}


def appMainClass = "io.ktor.server.netty.EngineMain"

application {
    mainClass.set(appMainClass)
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")
    implementation("io.ktor:ktor-server-netty:$ktor_version")
    implementation("ch.qos.logback:logback-classic:$logback_version")
    implementation("io.ktor:ktor-server-core:$ktor_version")
    implementation("io.ktor:ktor-jackson:$ktor_version")

    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version")

    testImplementation("io.ktor:ktor-server-tests:$ktor_version")
    testImplementation("io.strikt:strikt-core:$strikt_version")
}

compileKotlin {
    compilerOptions {
        freeCompilerArgs.add("-Xjsr305=strict")
        jvmTarget.set(JvmTarget.JVM_17)
    }
}

compileTestKotlin {
    compilerOptions {
        freeCompilerArgs.add("-Xjsr305=strict")
        jvmTarget.set(JvmTarget.JVM_17)
    }
}

test {
    dependsOn("cleanTest")
    testLogging {
        events("passed", "skipped", "failed")
    }
}

jar {
    manifest {
        attributes( "Main-Class": appMainClass)
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy("exclude")
}